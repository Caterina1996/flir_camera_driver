<?xml version="1.0"?>
<!--
Software License Agreement (BSD)

\file      stereo.launch
\authors   Michael Hosmar <mhosmar@clearpathrobotics.com>
\copyright Copyright (c) 2018, Clearpath Robotics, Inc., All rights reserved.

Redistribution and use in source and binary forms, with or without modification, are permitted provided that
the following conditions are met:
 * Redistributions of source code must retain the above copyright notice, this list of conditions and the
   following disclaimer.
 * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the
   following disclaimer in the documentation and/or other materials provided with the distribution.
 * Neither the name of Clearpath Robotics nor the names of its contributors may be used to endorse or promote
   products derived from this software without specific prior written permission.

THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WAR-
RANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, IN-
DIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT
OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<launch>
  <!-- Common parameters -->
  <arg name="frame_id"                   default="girona500/stereo_down"/>
  <arg name="camera_name"                default="stereo_ch3" />
  <arg name="calibration"                default="water" />
  <arg name="enable_pc_voxel"            default="true"/>
  <arg name="enable_decimate_x1"         default="false"/>
  <arg name="enable_decimate_x2"         default="false"/>
  <arg name="enable_decimate_x4"         default="true"/>

  <!-- IDS -->
  <arg name="left_camera_serial"         default="23045884" /> <!-- MASTER (also 16401228)-->
  <arg name="right_camera_serial"        default="23045887" /> <!-- SLAVE (also 16401229)-->

  <!-- Nodelet manager -->
  <!-- Both cameras are not loaded into one nodelet manager to avoid the namespacing issue. -->
  <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" output="screen"/>

  <group ns="$(arg camera_name)" >
    <group ns="left" >
      <!-- Camera nodelet -->
      <rosparam command="load" file="$(find spinnaker_camera_driver)/config/ch3/CM3-U3-31S4C_$(arg left_camera_serial)/params.yaml" ns="camera_nodelet"/>
      <node pkg="nodelet" type="nodelet" name="camera_nodelet" args="load spinnaker_camera_driver/SpinnakerCameraNodelet /camera_nodelet_manager" output="screen">
        <param name="frame_id"           value="$(arg frame_id)/left_optical" />
        <param name="serial"             value="$(arg left_camera_serial)" />
        <param name="flip"               value="true" />
        <param name="camera_info_url"    value="file://$(find spinnaker_camera_driver)/config/ch3/CM3-U3-31S4C_$(arg left_camera_serial)/calibration_lanty2_pool.yaml" /> 
      </node>

      <!-- Debayering nodelet -->
      <node pkg="nodelet" type="nodelet" name="image_proc_debayer" args="load image_proc/debayer /camera_nodelet_manager"/>
    </group>

    <group ns="right" >
      <!-- Camera nodelet -->
      <rosparam command="load" file="$(find spinnaker_camera_driver)/config/ch3/CM3-U3-31S4C_$(arg right_camera_serial)/params.yaml" ns="camera_nodelet"/>
      <node pkg="nodelet" type="nodelet" name="camera_nodelet" args="load spinnaker_camera_driver/SpinnakerCameraNodelet /camera_nodelet_manager" output="screen">
        <param name="frame_id"           value="$(arg frame_id)/right_optical" />
        <param name="serial"             value="$(arg right_camera_serial)" />
        <param name="flip"               value="false" />
        <param name="camera_info_url"    value="file://$(find spinnaker_camera_driver)/config/ch3/CM3-U3-31S4C_$(arg right_camera_serial)/calibration_lanty2_pool.yaml" /> 
      </node>

      <!-- Debayering nodelet -->
      <node pkg="nodelet" type="nodelet" name="image_proc_debayer" args="load image_proc/debayer /camera_nodelet_manager"/>
    </group>

    <!-- Stereo image processing nodelet -->
    <group if="$(arg enable_decimate_x1)">
      <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" respawn="true" output="screen">
        <rosparam file="$(find spinnaker_camera_driver)/config/ch3/disparity_params_x1.yaml"/>
        <param name="approximate_sync" value="true"/>
      </node>
    </group>

  <!-- x2 decimate -->
  <group if="$(arg enable_decimate_x2)">
    <include file="$(find spinnaker_camera_driver)/launch/stereo_crop_decimate.launch" >
      <arg name="stereo" value="$(arg camera_name)" />
      <arg name="decimation" value="2" />
    </include>
      <group ns="scaled_x2" >
        <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" respawn="true" output="screen">
          <rosparam file="$(find spinnaker_camera_driver)/config/ch3/disparity_params_x2.yaml"/>
          <param name="approximate_sync" value="true" />
        </node>
      </group>
  </group>

  <!-- x4 decimate -->
  <group if="$(arg enable_decimate_x4)">
    <include file="$(find spinnaker_camera_driver)/launch/stereo_crop_decimate.launch" >
      <arg name="stereo" value="$(arg camera_name)" />
      <arg name="decimation" value="4" />
    </include>
      <group ns="scaled_x4" >
        <node pkg="stereo_image_proc" type="stereo_image_proc" name="stereo_image_proc" respawn="true" output="screen">
          <rosparam file="$(find spinnaker_camera_driver)/config/ch3/disparity_params_x4.yaml"/>
          <param name="approximate_sync" value="true" />
        </node>
      </group>
  </group>

  <!-- Pointcloud voxel grid -->
  <group if="$(arg enable_pc_voxel)">
    <include file="$(find spinnaker_camera_driver)/launch/pc_voxel.launch">
      <arg name="camera" value="$(arg camera_name)"/>
    </include>
  </group>

  </group>
</launch>
